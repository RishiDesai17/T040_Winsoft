{"version":3,"sources":["zustand/store.js","components/MainNav.js","views/BarGraph.js","views/Positions.js","views/Home.js","views/Login.js","views/Maps.js","protected-route/protected-route.js","views/Create.js","App.js","serviceWorker.js","index.js"],"names":["INIT_STATE","loading","loggedIn","create","set","init","login","username","password","logout","useStore","localStorage","getItem","a","fetch","method","headers","body","JSON","stringify","response","json","result","message","setItem","access_token","alert","console","log","removeItem","MainNav","props","useCallback","state","Fragment","Navbar","style","zIndex","sticky","variant","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","display","IconButton","onClick","color","BarGraph","data","labels","edges","map","edge","location","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","total_edges","overflowX","margin","width","height","options","plugins","datalabels","anchor","align","title","text","animation","duration","easing","scales","xAxes","gridLines","ticks","beginAtZero","yAxes","legend","MyMapComponent","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","gmarkers","lat","coordinates","lng","marker","key","name","enemy","position","Positions","useEffect","markers","isMarkerShown","googleMapURL","loadingElement","containerElement","mapElement","useStyles","makeStyles","content","marginTop","gmap","marginBottom","heading","fontWeight","buttonRight","justifyContent","Home","classes","useState","keyVal","setKeyVal","encryptedMess","setencryptedMess","decrypted","setdecrypted","enemyLocations","setenemyLocations","desired_location","setdesired_location","setgmarkers","mapData","setmapData","barGraph","setbarGraph","mapOptions","setmapOptions","selectedMap","setselectedMap","decrypt","postData","encrypted_message","all_camp_names","Object","keys","requestOptions","decrypted_message","enemy_camps","getLocation","mapped","forEach","node","includes","enemies","all_edges","timestamp","Date","now","data_h","loc","push","real_life_coordinates","desirable","fillCanvas","map_details","collect","changeMap","mapId","canvasmapdata","context","document","getElementById","getContext","clearRect","fillText","x","y","this","save","scale","fillStyle","dummyCtx","call","restore","createElement","beginPath","font","arc","Math","PI","fill","neighbours","ng","moveTo","lineTo","stroke","Container","maxWidth","Typography","component","Grid","container","spacing","item","ms","xs","FormControl","InputLabel","Select","labelId","value","fullWidth","onChange","e","target","MenuItem","temp","index","_id","md","TextField","multiline","rows","direction","justify","Button","length","join","classname","graph","transform","textAlign","theme","paper","flexDirection","alignItems","avatar","palette","secondary","main","form","submit","fixHeight","minHeight","Login","setUsername","setPassword","error","history","useHistory","replace","CssBaseline","Avatar","required","autoFocus","type","table","minWidth","TableContainer","Maps","maps","setmaps","React","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","scope","toLocaleDateString","ProtectedRoute","Component","rest","render","to","styled","div","Input","ConfigDes","SubmitButton","Create","settitle","setMapData","saved","setsaved","places","setPlaces","place","createMap","objectMap","reduce","curr","val","placeholder","htmlFor","disabled","inputProps","size","prev","Number","isMulti","newValue","actionMeta","filter","pos","App","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bd9ccf77.chunk.js","sourcesContent":["import create from 'zustand';\r\n\r\nconst INIT_STATE = {\r\n    loading: true, \r\n    loggedIn: false\r\n}\r\n\r\nconst [useStore] = create(set => ({\r\n    ...INIT_STATE,\r\n    init: () => init(set),\r\n    login: (username, password) => login(username, password, set),\r\n    logout: () => logout(set)\r\n}))\r\n\r\nconst init = (set) => {\r\n    if(localStorage.getItem('auth-token')){\r\n        set({\r\n            loading: false,\r\n            loggedIn: true\r\n        })\r\n    }\r\n    else{\r\n        set({\r\n            loading: false,\r\n        })\r\n    }\r\n}\r\n\r\nconst login = async(username, password, set) => {\r\n    try{\r\n        const response = await fetch('/api/user/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        })\r\n        const result = await response.json()\r\n        if(result.message){\r\n            await localStorage.setItem('auth-token', result.access_token)\r\n            set({\r\n                loggedIn: true\r\n            })\r\n        }\r\n        else{\r\n            alert(\"Invalid credentials\")\r\n        }\r\n        \r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst logout = (set) => {\r\n    localStorage.removeItem('auth-token')\r\n    set({\r\n        loggedIn: false\r\n    })\r\n}\r\n\r\nexport default useStore","import React, { useState, useCallback } from 'react'\r\nimport {Navbar,Nav,Button} from 'react-bootstrap'\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport useStore from '../zustand/store';\r\n\r\nfunction MainNav(props) {\r\n  const { loggedIn, logout } = useStore(useCallback(state => ({loggedIn: state.loggedIn, logout: state.logout}), []))\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Navbar style={{zIndex:10000}} sticky=\"top\" variant=\"dark\" bg=\"dark\" expand=\"lg\" >\r\n        <Navbar.Brand href=\"/\" >Indian Army</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\" >\r\n            <Nav className=\"ml-auto mr-auto\">\r\n              <Nav.Link  href=\"/maps\">\r\n                <div >Maps</div>\r\n              </Nav.Link>\r\n              <Nav.Link  href=\"/create\">\r\n                <div >Create</div>\r\n              </Nav.Link>\r\n              \r\n            </Nav>\r\n            <Nav className=\"ml-auto\" style={{display:'contents'}}>\r\n              {\r\n                loggedIn ?\r\n                <IconButton onClick={logout}>\r\n                  <ExitToAppIcon style={{color:'white'}} />\r\n                </IconButton>\r\n                :\r\n                <Nav.Link href=\"/login\" className=\"BottomButton\" >\r\n                  <Button  variant=\"primary\">Log in</Button>{' '}\r\n                </Nav.Link>\r\n              }\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default MainNav","import React from 'react'\r\nimport {Bar} from 'react-chartjs-2';\r\nimport 'chartjs-plugin-datalabels';\r\n\r\nfunction BarGraph(props) {\r\n  const data = {\r\n    labels: props.edges.map(edge => edge.location),\r\n    datasets: [\r\n      {\r\n        label: 'Hops',\r\n        backgroundColor: 'rgba(255,99,132,0.2)',\r\n        borderColor: 'rgba(255,99,132,1)',\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n        hoverBorderColor: 'rgba(255,99,132,1)',\r\n        data: props.edges.map(edge => edge.total_edges)\r\n      }\r\n    ]\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{overflowX:'auto',margin:'20px 0px'}}>\r\n        \r\n        <Bar\r\n          data={data}\r\n          width={500}\r\n          height={500}\r\n          options={{\r\n            plugins: {\r\n              datalabels: {\r\n                anchor: 'end',\r\n                align: 'top',\r\n                display: true,\r\n                color: 'black'\r\n              }\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Minimum number of hops to Enemy Camps'\r\n            },\r\n            animation: {\r\n              duration:3000,\r\n              easing:'easeInBounce'\r\n            },\r\n            scales: {\r\n              xAxes: [{\r\n                gridLines:{\r\n                  display:false\r\n                },\r\n                ticks: {\r\n                  display:true,\r\n                  beginAtZero:true\r\n                }\r\n              }],\r\n              yAxes: [{\r\n                gridLines:{\r\n                  display:false\r\n                },\r\n                ticks:{\r\n                  display:false,\r\n                  beginAtZero:true\r\n                }\r\n              }]\r\n            },\r\n            legend:{\r\n              display:false\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default BarGraph\r\n","import React, { useState, useEffect} from 'react'\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\r\n\r\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\r\n  <GoogleMap\r\n    defaultZoom={8}\r\n    defaultCenter={\r\n      props.gmarkers?props.gmarkers[0]?{lat:props.gmarkers[0].coordinates[0],lng:props.gmarkers[0].coordinates[1]}:{}:{}\r\n    }\r\n  >\r\n    {\r\n      props.gmarkers.map(marker => {\r\n        return <Marker\r\n          key={marker.name}\r\n          label={marker.enemy?'Enemy':'Desired Location'}\r\n          position={{lat:marker.coordinates[0],lng:marker.coordinates[1]}}\r\n        />\r\n      })\r\n    }\r\n  </GoogleMap>\r\n))\r\n\r\nfunction Positions(props) {\r\n    useEffect(() => {\r\n        console.log('called gmap')\r\n    }, [])\r\n    return (\r\n        <React.Fragment>\r\n            <MyMapComponent\r\n              gmarkers={props.markers}\r\n              isMarkerShown\r\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\r\n              loadingElement={<div style={{ height: `100%` }} />}\r\n              containerElement={<div style={{ height: `400px` }} />}\r\n              mapElement={<div style={{ height: `100%` }} />}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Positions\r\n","import { Button, Container, FormControl, Grid, InputLabel, makeStyles, MenuItem, Select, TextField, Typography } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport MainNav from '../components/MainNav'\r\nimport { encrypted } from '../config'\r\nimport BarGraph from './BarGraph'\r\nimport Positions from './Positions'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  content:{\r\n    marginTop:10,\r\n    \r\n  },\r\n  gmap:{\r\n    marginTop:20,\r\n    marginBottom:20\r\n  },\r\n  heading:{\r\n    fontWeight: 700,\r\n    marginBottom: 10\r\n  },\r\n  buttonRight:{\r\n    display:'flex',\r\n    justifyContent:'flex-end',\r\n    marginTop:20,\r\n    marginBottom:20\r\n  }\r\n}))\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  const [keyVal, setKeyVal] = useState('');\r\n  const [encryptedMess, setencryptedMess] = useState('');\r\n  const [decrypted, setdecrypted] = useState(null);\r\n  const [enemyLocations, setenemyLocations] = useState(null);\r\n  const [desired_location, setdesired_location] = useState(null);\r\n  const [gmarkers, setgmarkers] = useState(null);\r\n  const [mapData, setmapData] = useState(null);\r\n  const [barGraph, setbarGraph] = useState(null);\r\n  const [mapOptions, setmapOptions] = useState([]);\r\n  const [selectedMap, setselectedMap] = useState('')\r\n\r\n  const decrypt = async() => {\r\n    if(encryptedMess === \"\" || keyVal === \"\" || setselectedMap===''){\r\n      alert(\"Enter all the three fields\")\r\n      return\r\n    }\r\n    const postData = JSON.stringify({\r\n      key: keyVal,\r\n      encrypted_message: encryptedMess,\r\n      all_camp_names: Object.keys(mapData)\r\n    })\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': 'Bearer ' + localStorage.getItem('auth-token')\r\n      },\r\n      body: postData\r\n    };\r\n    const data = await fetch(\"/api/decryption/\",requestOptions)\r\n    const result = await data.json();\r\n    setdecrypted(result && result.decrypted_message);\r\n    setenemyLocations(result && result.enemy_camps)\r\n  }\r\n\r\n  const getLocation = async() => {\r\n    let mapped = mapData;\r\n    Object.keys(mapped).forEach(node => {\r\n      if(enemyLocations.includes(node)) {\r\n        mapped[node].enemy=true;\r\n      } else {\r\n        mapped[node].enemy=false;\r\n      }\r\n    })\r\n    const postData = JSON.stringify({\r\n      enemies:enemyLocations,\r\n      map:mapped\r\n    })\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': 'Bearer ' + localStorage.getItem('auth-token')\r\n      },\r\n      body: postData\r\n    };\r\n    const data = await fetch(\"/api/map/get-desired-location\",requestOptions)\r\n    const result = await data.json();\r\n    if(result && result.desired_location) {\r\n      setbarGraph(result.all_edges);\r\n      let postData = JSON.stringify({\r\n        decrypted,\r\n        desired_location:result.desired_location,\r\n        timestamp:Date.now()\r\n      })\r\n      let requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          'Authorization': 'Bearer ' + localStorage.getItem('auth-token')\r\n        },\r\n        body: postData\r\n      };\r\n      let data_h = await fetch(\"/api/decryption/history\",requestOptions)\r\n      let result_h = await data_h.json();\r\n      setdesired_location(result.desired_location);\r\n      let markers = [{\r\n        name:result.desired_location,\r\n        coordinates:mapData[result.desired_location][\"real_life_coordinates\"],\r\n        enemy:false\r\n      }]\r\n      enemyLocations.forEach(loc => {\r\n        markers.push({\r\n          name:loc,\r\n          coordinates:mapData[loc].real_life_coordinates,\r\n          enemy:true,\r\n        })\r\n      })\r\n      setgmarkers(markers);\r\n      \r\n      mapped[result.desired_location].desirable = true;\r\n      fillCanvas(mapped);\r\n    }\r\n    \r\n  }\r\n  \r\n  useEffect(() => {\r\n    const collect = async() => {\r\n      const result = await fetch(\"/api/map/\",{\r\n        method:\"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          'Authorization': 'Bearer ' + localStorage.getItem('auth-token')\r\n        }\r\n      })\r\n      const data =await result.json();\r\n      console.log(data);\r\n      setmapOptions(data.map_details)\r\n    }\r\n    collect();\r\n  }, [])\r\n\r\n  const changeMap = async(mapId) => {\r\n    if (mapId=='') return;\r\n    setselectedMap(mapId);\r\n    const result = await fetch(`/api/map/single/${mapId}`,{\r\n      method:\"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': 'Bearer ' + localStorage.getItem('auth-token')\r\n      }\r\n    })\r\n    const data =await result.json();\r\n    setmapData(data.data.map);\r\n    fillCanvas(data.data.map);\r\n  }\r\n\r\n  const fillCanvas= (canvasmapdata) => {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, 600, 300);\r\n    let mapped = canvasmapdata;\r\n    const offset =25;\r\n    // Create a custom fillText funciton that flips the canvas, draws the text, and then flips it back\r\n    context.fillText = function(text, x, y) {\r\n      this.save();       // Save the current canvas state\r\n      this.scale(1, -1); // Flip to draw the text\r\n      this.fillStyle=\"black\";\r\n      this.fillText.dummyCtx.fillText.call(this, text+ `(${(x-offset)/10},${(y-offset+20)/10})`, x, -y); // Draw the text, invert y to get coordinate right\r\n      this.restore();    // Restore the initial canvas state\r\n    }\r\n    context.fillText.dummyCtx = document.createElement('canvas').getContext('2d');\r\n    Object.keys(mapped).forEach(node => {\r\n      context.beginPath();\r\n      context.font = \"10px Arial\";\r\n      context.fillText(node, (mapped[node].coordinates[0]*10)+offset,(mapped[node].coordinates[1]*10)+offset -20);\r\n      \r\n      context.arc((mapped[node].coordinates[0]*10)+offset, (mapped[node].coordinates[1]*10)+offset, 10, 0, 2 * Math.PI);\r\n      if(mapped[node].enemy) {\r\n        context.fillStyle = \"red\";\r\n      } else if(mapped[node].desirable) {\r\n        context.fillStyle = \"green\";\r\n      } else {\r\n        context.fillStyle = \"blue\";\r\n      }\r\n      \r\n      context.fill();\r\n      mapped[node].neighbours.map(ng => {\r\n        context.moveTo((mapped[node].coordinates[0]*10)+offset,(mapped[node].coordinates[1]*10)+offset);\r\n        context.lineTo((mapped[ng].coordinates[0]*10)+offset, (mapped[ng].coordinates[1]*10)+offset);\r\n        context.stroke();\r\n      })\r\n      context.stroke();\r\n    })\r\n    \r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MainNav/>\r\n      <Container maxWidth=\"md\">\r\n        <div className={classes.content}>\r\n          <Typography align=\"center\" variant=\"h5\" component=\"div\" className={classes.heading}>\r\n            Enter Details\r\n          </Typography>\r\n          <Grid container spacing={4}>\r\n            <Grid item ms={12} xs={12}>\r\n              <FormControl variant=\"outlined\" style={{width:'100%'}}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">Select Map</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={selectedMap}\r\n                  fullWidth\r\n                  onChange={e => changeMap(e.target.value)}\r\n                  label=\"Select Map\"\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {mapOptions.map((temp,index) => \r\n                    <MenuItem key={`map${index}`} value={temp._id}>{temp.title}</MenuItem>\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={12} xs={12}>\r\n              <TextField \r\n              id=\"outlined-basic\" \r\n              label=\"Enter Key\" \r\n              variant=\"outlined\"\r\n              value={keyVal}\r\n              fullWidth\r\n              onChange={e => setKeyVal(e.target.value)} \r\n              />\r\n            </Grid>\r\n            <Grid item md={12} xs={12}>\r\n            \r\n              <TextField \r\n                id=\"outlined-basic\" \r\n                label=\"Enter encrypted Message\" \r\n                variant=\"outlined\"\r\n                fullWidth\r\n                multiline\r\n                rows=\"6\"\r\n                value={encryptedMess}\r\n                onChange={e => setencryptedMess(e.target.value)} \r\n                />\r\n              \r\n            </Grid>\r\n            <Grid item md={12} xs={12} container direction=\"row\" justify=\"flex-end\">\r\n              <Button  \r\n                variant=\"contained\"  \r\n                color=\"primary\"\r\n                onClick={decrypt}\r\n                >\r\n                Decrypt\r\n              </Button>\r\n            </Grid>\r\n            <Grid item md={12} xs={12}>\r\n              {decrypted ? <>\r\n                 <strong>Decrypted Message</strong> : {decrypted}\r\n              </>:null}\r\n            </Grid>\r\n            <Grid item md={12} xs={12}>\r\n              {\r\n                enemyLocations?enemyLocations.length?<>\r\n                <strong>Enemy locations found at :</strong> {enemyLocations.join()}\r\n                <div className={classes.buttonRight}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    onClick={getLocation}\r\n                  >\r\n                    Get Desirable Position\r\n                  </Button>\r\n                </div>\r\n                </>:'No Enemy Locations Found':null\r\n              }\r\n              \r\n            </Grid>\r\n            <Grid item md={12} xs={12}>\r\n              {desired_location ? <>\r\n                 <strong>Desired Position</strong> : {desired_location}\r\n              </>:null}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing ={2}>\r\n            <Grid item xs={12} md={12} classname={classes.graph}>\r\n              <div style={{transform: 'scaleY(-1)',textAlign:'center',overflowX:'auto'}}>\r\n                <canvas id=\"canvas\" width=\"600\" height=\"300\" ></canvas>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} className={classes.gmap}>\r\n              { gmarkers && \r\n                <Positions markers={gmarkers}/>\r\n              }\r\n            </Grid>\r\n            <Grid container justify=\"center\" item xs={12} md={12}>\r\n              {barGraph && <BarGraph edges={barGraph}/> }\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport useStore from '../zustand/store';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MainNav from '../components/MainNav';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  \r\n  fixHeight:{\r\n    minHeight:'90vh'\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error,setError] = useState(null);\r\n  const { login, loggedIn } = useStore(useCallback(state => ({ login: state.login, loggedIn: state.loggedIn }), []))\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  if(loggedIn){\r\n    history.replace('/')\r\n  }\r\n\r\n  return (<div>\r\n    <MainNav/>\r\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.fixHeight}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n          />\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => login(username, password)}\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          \r\n        </form>\r\n        {error && (\r\n          <div style={{color:'red'}}>{error}</div>\r\n        )}\r\n      </div>\r\n      \r\n    </Container>\r\n    </div>\r\n  );\r\n}","import { Container, Typography } from '@material-ui/core'\r\nimport React, {useState} from 'react'\r\nimport MainNav from '../components/MainNav'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  TableContainer:{\r\n    marginTop:20,\r\n    marginBottom:20\r\n  },\r\n  heading:{\r\n    margin:20\r\n  }\r\n});\r\n\r\n\r\nfunction Maps() {\r\n  const [maps, setmaps] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    const collect = async() => {\r\n      const result = await fetch(\"/api/decryption/history\", {\r\n        method:'GET',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          'Authorization': 'Bearer ' + localStorage.getItem('auth-token')\r\n        }\r\n      });\r\n      const data = await result.json();\r\n      console.log(data);\r\n      setmaps(data.history);\r\n    }\r\n    collect();\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <MainNav/>\r\n    \r\n      <Container maxWidth=\"md\">\r\n        <Typography align=\"center\" variant=\"h5\" component=\"div\" className={classes.heading}>\r\n            Previous Executions    \r\n        </Typography>\r\n        <TableContainer component={Paper} className={classes.TableContainer}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell><strong>Decrypted Message</strong></TableCell>\r\n                <TableCell align=\"right\">\r\n                  <strong>\r\n                    Desired Location\r\n                  </strong>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <strong>\r\n                    Date\r\n                  </strong>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {maps.map((row,index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.decrypted}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.desired_location}</TableCell>\r\n                  <TableCell align=\"right\">{new Date(row.timestamp).toLocaleDateString()}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Maps\r\n","import React, { useCallback } from 'react';\r\nimport useStore from '../zustand/store';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    const loggedIn = useStore(useCallback(state => state.loggedIn, []))\r\n    return(\r\n        <Route \r\n            {...rest}\r\n            render = {props => \r\n                loggedIn ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React,{Fragment, useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport TagsInput from 'react-tagsinput'\r\nimport 'react-tagsinput/react-tagsinput.css'\r\nimport MapOutlinedIcon from '@material-ui/icons/MapOutlined';\r\nimport MarkunreadMailboxOutlinedIcon from '@material-ui/icons/MarkunreadMailboxOutlined';\r\nimport { Button, Grid, TextField } from '@material-ui/core';\r\nimport MainNav from '../components/MainNav';\r\n\r\nconst Container = styled.div`\r\n  background:white;\r\n  padding:20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 120px;\r\n  margin-right: 50px;\r\n  margin-top: 20px;\r\n  border-color: rgb(224, 231, 255);\r\n  border-radius: 15px;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  input::-webkit-input-placeholder {\r\n    font-style:italic;\r\n    color:#989494;\r\n  }\r\n  .react-tagsinput {\r\n    height: 44px;\r\n    background: rgb(245,247,252);\r\n    border:none;\r\n    padding: 10px;\r\n    overflow: auto;\r\n    margin-top:10px;\r\n  }\r\n  .react-tagsinput-tag {\r\n    background-color: hsl(0,0%,90%);\r\n    border:none;\r\n    font-size: 14px;\r\n    color:black;\r\n  }\r\n  .react-tagsinput-remove {\r\n    color:black;\r\n  }\r\n`\r\n\r\nconst Input = styled.div`\r\n  input {\r\n    padding: 10px;\r\n    width: 100%;\r\n    height: 44px;\r\n    margin-top: 12px;\r\n    outline: none;\r\n    border-style: none;\r\n    background: rgb(245, 247, 252);\r\n  }\r\n`\r\nconst ConfigDes = styled.div`\r\n  font-size:18px;\r\n  margin-top:20px;\r\n  margin-bottom:20px;\r\n  display:flex;\r\n  align-items:center;\r\n  span {\r\n    border-bottom:3px dotted #dedada;\r\n    margin-left: 8px;\r\n  }\r\n`\r\nconst SubmitButton = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top:20px;\r\n  cursor:pointer;\r\n  button {\r\n    background:green;\r\n    color:white;\r\n    border: none;\r\n    padding: 10px;\r\n    height: 40px;\r\n  }\r\n  \r\n`\r\nconst customStyles = {\r\n  control: (provided) => ({\r\n    ...provided,\r\n    height: 44,\r\n    marginTop: 12\r\n  }),\r\n  \r\n}\r\n\r\nconst Create = (props) => {\r\n  const [title, settitle] = useState('');\r\n  const [mapData, setMapData] = useState([]);\r\n  const [saved, setsaved] = useState(false)\r\n  const [places, setPlaces] = useState([])  \r\n  \r\n  useEffect(() => {\r\n    let data = places.map(place => {\r\n      return {\r\n        name:place,\r\n        coordinates: [],\r\n        neighbours: [],\r\n        real_life_coordinates:[]\r\n      }\r\n    })\r\n    setMapData(data)\r\n  },[places])\r\n\r\n  useEffect(() => {\r\n    console.log('mapdaa',mapData);\r\n    \r\n  }, [mapData])\r\n\r\n  const createMap = async() => {\r\n    let objectMap = mapData.reduce((curr,val) => {\r\n      return {...curr,[val.name]:{\r\n        coordinates:val.coordinates,\r\n        real_life_coordinates:val.real_life_coordinates,\r\n        neighbours:val.neighbours\r\n      }}\r\n    },{})\r\n    const postData = JSON.stringify({\r\n      title,\r\n      map:objectMap\r\n    })\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'Authorization': 'Bearer ' + localStorage.getItem('auth-token')\r\n      },\r\n      body: postData\r\n    };\r\n    let result = await fetch(\"/api/map/\",requestOptions);\r\n    let data = await result.json();\r\n    if(data.message=='success') {\r\n      alert('New map was created successfully');\r\n      props.history.push('/')\r\n    }\r\n    console.log(objectMap);\r\n  }\r\n  return (<div>\r\n      <MainNav/>\r\n      <Container>\r\n        <ConfigDes>\r\n          <MapOutlinedIcon/>{' '}\r\n          <span>Create a New Map</span>\r\n        </ConfigDes>\r\n        <Grid container spacing={2} style={{marginTop: 10}} >\r\n          <Grid item xs={12} md={12}>\r\n            <Input>\r\n              <input \r\n              type=\"text\"\r\n              value={title}\r\n              id=\"title\"\r\n              onChange={e => settitle(e.target.value)}\r\n              placeholder=\"Enter title\"\r\n              /> \r\n            </Input>\r\n          </Grid>\r\n          <Grid item xs={12} md={12} >\r\n            <label htmlFor=\"places\">Assign Places</label>\r\n            <TagsInput \r\n              value={places} \r\n              onChange={(val) => setPlaces(val)}\r\n              disabled={saved}\r\n              id=\"places\"\r\n              inputProps = {{\r\n                placeholder: 'Place..'\r\n              }}\r\n              />\r\n          </Grid>\r\n          <Grid justify=\"flex-end\" container item xs={12} md={12}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => setsaved(!saved)}\r\n            >\r\n              {saved?'Reset':'Save'}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        { saved && <Fragment>\r\n            <ConfigDes>\r\n              <MarkunreadMailboxOutlinedIcon/> {' '}\r\n              <span>Assign Details</span>\r\n            </ConfigDes> \r\n            \r\n            <Grid container spacing={2}>\r\n              {\r\n                mapData.map((place,index) => {\r\n                  return <Fragment key={`place${index}`}>\r\n                    <Grid item md={12} xs={12}>\r\n                      <span>{place.name}</span>\r\n                    </Grid>\r\n                    <Grid item md={2} xs={2}>\r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        label=\"Coordinate X\"\r\n                        type=\"number\"\r\n                        size=\"small\"\r\n                        value={mapData[index].coordinates[0]}\r\n                        onChange={e => setMapData(prev => {\r\n                          let data = prev;\r\n                          data[index].coordinates[0] = Number(e.target.value)\r\n                          return data;\r\n                        })}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={2} xs={2}>\r\n                      <TextField \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        type=\"number\"\r\n                        label=\"Coordinate Y\"\r\n                        size=\"small\"\r\n                        value={mapData[index].coordinates[1]}\r\n                        onChange={e => setMapData(prev => {\r\n                          let data = prev;\r\n                          data[index].coordinates[1] = Number(e.target.value)\r\n                          return data;\r\n                        })}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={2} xs={2}>\r\n                      <TextField \r\n                        variant=\"outlined\"  \r\n                        fullWidth\r\n                        label=\"Lat\"\r\n                        type=\"number\"\r\n                        size=\"small\"\r\n                        value={mapData[index].real_life_coordinates[0]}\r\n                        onChange={e => setMapData(prev => {\r\n                          let data = prev;\r\n                          data[index].real_life_coordinates[0] = Number(e.target.value)\r\n                          return data;\r\n                        })}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={2} xs={2}>\r\n                      <TextField \r\n                        variant=\"outlined\" \r\n                        fullWidth\r\n                        type=\"number\"\r\n                        label=\"Long\"\r\n                        size=\"small\"\r\n                        value={mapData[index].real_life_coordinates[1]}\r\n                        onChange={e => setMapData(prev => {\r\n                          let data = prev;\r\n                          data[index].real_life_coordinates[1] = Number(e.target.value)\r\n                          return data;\r\n                        })}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={4} xs={2}>\r\n                      <CreatableSelect\r\n                        isMulti\r\n                        onChange={(newValue,actionMeta) => {\r\n                          let data = newValue;\r\n                          if(!newValue) {\r\n                            data = [];\r\n                          }\r\n                          setMapData(prev => {\r\n                            let val = prev;\r\n                            val[index].neighbours = data.map(loc => loc.value )\r\n                            return val;\r\n                          })\r\n                        }}\r\n                        placeholder={'Enter Neighbours'}\r\n                        options={places.filter(loc => loc!=place.name).map(pos => {\r\n                          return {value:pos,label:pos}\r\n                        })\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Fragment>\r\n                })\r\n              }\r\n            </Grid>\r\n            <SubmitButton>\r\n              <button onClick={createMap}>\r\n                Create Map\r\n              </button>\r\n            </SubmitButton> \r\n          </Fragment>\r\n        }\r\n        \r\n        \r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Create","import React, { useEffect, useCallback } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Home from './views/Home';\r\nimport Login from './views/Login';\r\nimport Maps from './views/Maps';\r\nimport useStore from './zustand/store';\r\nimport ProtectedRoute from './protected-route/protected-route';\r\nimport Create from './views/Create';\r\n\r\nfunction App() {\r\n  const { init, loading } = useStore(useCallback(state => ({ init: state.init, loading: state.loading }), []))\r\n\r\n  useEffect(() => {\r\n    init()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {loading ? <p>Loading...</p> : \r\n          <Switch>\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <ProtectedRoute exact path=\"/\" component={Home}/>\r\n            <ProtectedRoute exact path=\"/maps\" component={Maps}/>\r\n            <ProtectedRoute exact path=\"/create\" component={Create}/>\r\n            <Route path=\"*\" component={() => 'error 404'}/>\r\n          </Switch>\r\n        }\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}